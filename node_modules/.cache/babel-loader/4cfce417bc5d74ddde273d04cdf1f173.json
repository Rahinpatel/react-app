{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/webelight-011/Desktop/django_react/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/webelight-011/Desktop/django_react/react-tracks-client/src/Root.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n    user{\\n    email\\n    password\\n    username\\n}\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport withRoot from \"./withRoot\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Grid } from 'semantic-ui-react';\n\nfunction Root() {\n  var _useQuery = useQuery(GET_USER_QUERY),\n      user = _useQuery.data.user,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (data) {\n    console.log(data);\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"Recent regiser\")), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Loading post...\") : {}));\n}\n\nvar GET_USER_QUERY = gql(_templateObject());\nexport default withRoot(Root);","map":{"version":3,"sources":["/home/webelight-011/Desktop/django_react/react-tracks-client/src/Root.js"],"names":["React","withRoot","useQuery","gql","Grid","Root","GET_USER_QUERY","user","data","loading","error","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,SAASC,IAAT,GAAe;AAAA,kBAEkCH,QAAQ,CAACI,cAAD,CAF1C;AAAA,MAEWC,IAFX,aAEAC,IAFA,CAEMD,IAFN;AAAA,MAEiBE,OAFjB,aAEiBA,OAFjB;AAAA,MAEyBC,KAFzB,aAEyBA,KAFzB;;AAGP,MAAIF,IAAJ,EAAS;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH;;AACD,MAAIE,KAAJ,EAAU;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACD,sBAEI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,eAIA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADI,GAGJ,EAJR,CAJA,CAFJ;AAeH;;AAGL,IAAMH,cAAc,GAAGH,GAAH,mBAApB;AAUA,eAAeF,QAAQ,CAACI,IAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport withRoot from \"./withRoot\";\nimport {useQuery} from '@apollo/react-hooks';\nimport gql from 'graphql-tag'\nimport { Grid } from 'semantic-ui-react'\n\nfunction Root(){\n     \n        const {data:{user:user},loading,error} = useQuery(GET_USER_QUERY) \n        if (data){\n            console.log(data)\n        }\n        if (error){\n            console.log(error)\n        }\n        return(\n\n            <Grid columns={3}>\n                <Grid.Row>\n                    <h1>Recent regiser</h1>\n                </Grid.Row>\n            <Grid.Row>\n                {loading ?(\n                    <h1>Loading post...</h1>\n                ):(\n                    {}\n                )}\n            </Grid.Row>\n            </Grid>\n        )\n    }\n\n\nconst GET_USER_QUERY = gql`\n{\n    user{\n    email\n    password\n    username\n}\n}\n`;\n\nexport default withRoot(Root);\n"]},"metadata":{},"sourceType":"module"}