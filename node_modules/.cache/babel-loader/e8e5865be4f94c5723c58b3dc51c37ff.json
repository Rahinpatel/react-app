{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/webelight-011/Desktop/django_react/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/webelight-011/Desktop/django_react/react-tracks-client/src/Root.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nmutation tokenAuth(\\n    $username: String!\\n    $password: String!\\n){\\n    tokenAuth(\\n        username : $username\\n        password : $password\\n    ){\\n        success\\n        errors\\n    }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n    user{\\n    email\\n    password\\n    username\\n}\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Component } from 'react';\nimport withRoot from \"./withRoot\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Form } from 'semantic-ui-react'; // import PostCard from\n\nvar GET_USER_QUERY = gql(_templateObject());\nvar USERDATA = gql(_templateObject2());\n\nfunction Root() {\n  var _useQuery = useQuery(GET_USER_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (data) {\n    console.log(data);\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Small Demo\"));\n} // const ADD_USER_MUTATION = gql`\n//     mutation createUsermutation($username: String!,email: String!,password: String!)\n// {\n//     createUsermutation(username: $username, email: $email, password: $password)\n// }`;\n\n\nexport default withRoot(Root);","map":{"version":3,"sources":["/home/webelight-011/Desktop/django_react/react-tracks-client/src/Root.js"],"names":["React","Component","withRoot","useQuery","useMutation","gql","Button","Form","GET_USER_QUERY","USERDATA","Root","data","loading","error","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,EAAgBC,IAAhB,QAA4B,mBAA5B,C,CACA;;AAGA,IAAMC,cAAc,GAAGH,GAAH,mBAApB;AAUA,IAAMI,QAAQ,GAAGJ,GAAH,oBAAd;;AAiBA,SAASK,IAAT,GAAe;AAAA,kBAEkBP,QAAQ,CAACK,cAAD,CAF1B;AAAA,MAEJG,IAFI,aAEJA,IAFI;AAAA,MAECC,OAFD,aAECA,OAFD;AAAA,MAESC,KAFT,aAESA,KAFT;;AAGX,MAAIF,IAAJ,EAAS;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH;;AACD,MAAIE,KAAJ,EAAU;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR,CADJ;AAGH,C,CAED;AACA;AACA;AACA;AACA;;;AAIA,eAAeX,QAAQ,CAACQ,IAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport { Component } from 'react';\n\nimport withRoot from \"./withRoot\";\nimport {useQuery} from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport gql from 'graphql-tag'\nimport { Button,Form } from 'semantic-ui-react'\n// import PostCard from\n\n\nconst GET_USER_QUERY = gql`\n{\n    user{\n    email\n    password\n    username\n}\n}\n`;\n\nconst USERDATA = gql`\nmutation tokenAuth(\n    $username: String!\n    $password: String!\n){\n    tokenAuth(\n        username : $username\n        password : $password\n    ){\n        success\n        errors\n    }\n}\n`;\n\n\n\nfunction Root(){\n\n    const {data,loading,error} = useQuery(GET_USER_QUERY) \n    if (data){\n        console.log(data)\n    }\n    if (error){\n        console.log(error)\n    }\n    return(\n        <center><h1>Small Demo</h1></center>\n    )\n}\n\n// const ADD_USER_MUTATION = gql`\n//     mutation createUsermutation($username: String!,email: String!,password: String!)\n// {\n//     createUsermutation(username: $username, email: $email, password: $password)\n// }`;\n\n\n\nexport default withRoot(Root);\n"]},"metadata":{},"sourceType":"module"}