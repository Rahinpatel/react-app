{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/webelight-011/Desktop/django_react/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/webelight-011/Desktop/django_react/react-tracks-client/src/Root.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createUsermutation($username: String!,email: String!,password: String!) {\\n      createUsermutation(username: $username, email: $email, password: $password)\\n      )\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n    user{\\n    email\\n    password\\n    username\\n}\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Component } from 'react';\nimport withRoot from \"./withRoot\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Grid } from 'semantic-ui-react'; // import PostCard from\n\nvar GET_USER_QUERY = gql(_templateObject());\n\nfunction Root() {\n  var _useQuery = useQuery(GET_USER_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (data) {\n    console.log(data);\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Small Demo\"));\n}\n\nfunction register() {\n  var ADD_USER_MUTATION = gql(_templateObject2());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: loading ? \"loading\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Login Form\"), /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Username or email\",\n    placeholder: \"Username or email\",\n    name: \"username\",\n    value: values.username,\n    onChange: onChange,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default withRoot(register);","map":{"version":3,"sources":["/home/webelight-011/Desktop/django_react/react-tracks-client/src/Root.js"],"names":["React","Component","withRoot","useQuery","useMutation","gql","Grid","GET_USER_QUERY","Root","data","loading","error","console","log","register","ADD_USER_MUTATION","onSubmit","values","username","onChange"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;;AAGA,IAAMC,cAAc,GAAGF,GAAH,mBAApB;;AAUA,SAASG,IAAT,GAAe;AAAA,kBAEsBL,QAAQ,CAACI,cAAD,CAF9B;AAAA,MAEAE,IAFA,aAEAA,IAFA;AAAA,MAEKC,OAFL,aAEKA,OAFL;AAAA,MAEaC,KAFb,aAEaA,KAFb;;AAGP,MAAIF,IAAJ,EAAS;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH;;AACD,MAAIE,KAAJ,EAAU;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR,CADJ;AAGH;;AAEL,SAASG,QAAT,GAAmB;AAEf,MAAMC,iBAAiB,GAAGV,GAAH,oBAAvB;AAMA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEW,QAAhB;AAA0B,IAAA,UAAU,MAApC;AAAqC,IAAA,SAAS,EAAEN,OAAO,GAAG,SAAH,GAAe,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,IAAD,CAAM,KAAN;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,WAAW,EAAC,mBAFhB;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,KAAK,EAAEO,MAAM,CAACC,QAJlB;AAKI,IAAA,QAAQ,EAAEC,QALd;AAMI,IAAA,IAAI,EAAC,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADA;AAmCH;;AAKD,eAAejB,QAAQ,CAACY,QAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport { Component } from 'react';\n\nimport withRoot from \"./withRoot\";\nimport {useQuery} from '@apollo/react-hooks';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport gql from 'graphql-tag'\nimport { Grid } from 'semantic-ui-react'\n// import PostCard from\n\n\nconst GET_USER_QUERY = gql`\n{\n    user{\n    email\n    password\n    username\n}\n}\n`;\n\nfunction Root(){\n\n        const {data,loading,error} = useQuery(GET_USER_QUERY) \n        if (data){\n            console.log(data)\n        }\n        if (error){\n            console.log(error)\n        }\n        return(\n            <center><h1>Small Demo</h1></center>\n        )\n    }\n\nfunction register(){\n    \n    const ADD_USER_MUTATION = gql`\n    mutation createUsermutation($username: String!,email: String!,password: String!) {\n      createUsermutation(username: $username, email: $email, password: $password)\n      )\n    }\n  `;\n    return (\n    <div>\n        <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\n            <h1>Login Form</h1>\n            <Form.Input\n                label=\"Username or email\"\n                placeholder=\"Username or email\"\n                name=\"username\"\n                value={values.username}\n                onChange={onChange}\n                type=\"text\"\n            />\n            {/* <Form.Input\n                label=\"Password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                onChange={onChange}\n                value={values.password}\n                type=\"password\"\n            />\n            \n            {Object.keys(errors).length > 0 && (\n                <div className=\"ui error message\">\n                    <ul className=\"list\">\n                        {Object.keys(errors).map(value => (\n                            <li key={value}>{value}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n            <Button type='submit'>Login</Button> */}\n        </Form>\n    </div>\n);\n\n}\n\n\n\n\nexport default withRoot(register);\n"]},"metadata":{},"sourceType":"module"}