{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/webelight-011/Desktop/django_react/react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n    users($id: Int){\\n    id\\n    password\\n    username\\n}\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport withRoot from \"./withRoot\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost'; // const Root = () => (\n//         <Query query={GET_USER_QUERY}>\n//         </Query>\n// )\n\nfunction data() {\n  var _useQuery = useQuery(GET_USER_QUERY),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (data) {\n    console.log(data);\n  }\n}\n\nvar GET_USER_QUERY = gql(_templateObject());\nexport default withRoot(Root); // {\n//     users($id:Int!){\n//         id\n//         username\n//         password\n//     }\n// }","map":{"version":3,"sources":["/home/webelight-011/Desktop/django_react/react-tracks-client/src/Root.js"],"names":["React","withRoot","useQuery","gql","data","GET_USER_QUERY","loading","console","log","Root"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,GAAR,QAAkB,cAAlB,C,CAEA;AAEA;AAIA;AAEA;;AAEA,SAASC,IAAT,GAAe;AAAA,kBACYF,QAAQ,CAACG,cAAD,CADpB;AAAA,MACJC,OADI,aACJA,OADI;AAAA,MACIF,IADJ,aACIA,IADJ;;AAEX,MAAIA,IAAJ,EAAS;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH;AACJ;;AAED,IAAMC,cAAc,GAAGF,GAAH,mBAApB;AAUA,eAAeF,QAAQ,CAACQ,IAAD,CAAvB,C,CACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\nimport withRoot from \"./withRoot\";\nimport {useQuery} from '@apollo/react-hooks'\nimport {gql} from 'apollo-boost'\n\n// const Root = () => (\n\n//         <Query query={GET_USER_QUERY}>\n\n\n\n//         </Query>\n\n// )\n\nfunction data(){\n    const {loading,data} = useQuery(GET_USER_QUERY) \n    if (data){\n        console.log(data)\n    }\n}\n\nconst GET_USER_QUERY = gql`\n{\n    users($id: Int){\n    id\n    password\n    username\n}\n}\n`;\n\nexport default withRoot(Root);\n// {\n//     users($id:Int!){\n//         id\n//         username\n//         password\n\n//     }\n// }"]},"metadata":{},"sourceType":"module"}